#!/usr/bin/env python
# coding: utf-8

# 📌Q1. 여러분은 파이썬을 통해 설문조사 문항의 응답내역을 분석하게 되었습니다. 문항별 응답내용에는 하나의 응답만 할 수 있는 single choice 문제와 여러 응답을 선택할 수 있는 multiple choice 문제가 있습니다. 2개를 구분하기 위해 single choice 문항 번호에 "_"를 표기하지 않기로 했습니다.
# 
# #### 문항별 응답내역이 'question'에 담겨 있을 때, 조건문과 반복문을 사용하여 아래와 같은 결과가 출력되도록 코드를 작성해보세요.
# 
# question = ['Q2', 'Q3', 'Q4', 'Q5', 'Q6_1', 'Q6_2', 'Q6_3', 'Q6_4', 'Q6_5', 'Q6_6', 'Q6_7', 'Q6_8', 'Q6_9', 'Q6_10', 'Q6_11', 'Q6_12', 'Q7_1', 'Q7_2', 'Q7_3', 'Q7_4', 'Q7_5', 'Q7_6', 'Q7_7', 'Q8', 'Q9', 'Q10_1', 'Q10_2', 'Q10_3']

# In[ ]:


question = ['Q2', 'Q3', 'Q4', 'Q5', 'Q6_1', 'Q6_2', 'Q6_3', 'Q6_4', 'Q6_5', 'Q6_6','Q6_7', 'Q6_8', 'Q6_9', 'Q6_10', 'Q6_11', 'Q6_12', 'Q7_1', 'Q7_2',
       'Q7_3', 'Q7_4', 'Q7_5', 'Q7_6', 'Q7_7', 'Q8', 'Q9', 'Q10_1', 'Q10_2', 'Q10_3']


# In[12]:


#Question 리스트의 멤버중 문자열의 길이가 2인 것을 출력한다.
[one for one in question if len(one)==2]


#   

# 📌Q2. 한스 로슬링(Hans Rosling, 1948년 7월 27일 ~ 2017년 2월 7일)은 스웨덴의 의사이자 통계학자로 비영리 벤처 갭마인더 재단의 공동설립자이기도 합니다. 빅데이터를 가장 잘 활용하는 보건 통계학자로 알려져 있습니다. 베스트셀러 책인 "팩트풀니스" 저자이기도 합니다. 갭마인더 사이트에서는 연도별, 국가별 GDP와 기대수명 데이터를 제공하고 있는데, 대표적으로 파이썬 라이브러리 중 'seaborn'에서 제공되는 예제 데이터가 있습니다. 오늘은 이 데이터를 활용해 문제를 풀어보겠습니다.
# #### 다음의 데이터는 연도, 국가별 기대수명을 나타내고 있는 데이터 입니다. 2011년 부터의 연도별, 국가별 평균 기대수명을 구해주세요. (2011년도 포함되게 구합니다.)
# 
# [필수 조건] groupby 나 pivot_table을 활용합니다. groupby 로 구할 때 unstack()이라는 기능을 사용하여 아래와 같이 컬럼에 인덱스 값을 올려서 표기할 수 있습니다.
# 만약 행에는 '연도'가, 열에 '국가'가 들어있고 수치 데이터의 결과값이 아래와 같다면, 출력형태는 조금 달라도 괜찮습니다.
# 데이터는 다음의 방법으로 읽어옵니다.
# ```
# import pandas as pd
# df = pd.read_csv("https://raw.githubusercontent.com/mwaskom/seaborn-data/master/healthexp.csv")
# df
# ```

# In[17]:


import pandas as pd
df = pd.read_csv("https://raw.githubusercontent.com/mwaskom/seaborn-data/master/healthexp.csv")
df_2011 = df[ df['Year'] >= 2011 ]
del df_2011['Spending_USD']
df_2011_pivot = df_2011.pivot_table(index='Year', columns=['Country'])
df_2011_pivot.head()


#   

# 📌Q3. Jupyter notebook 은 문서와 코드를 함께 작성할 수 있다는 점이 장점입니다. 
# #### Jupyter notebook 에서 지원하는 Markdown 문법을 사용하여, 이번 주에 배운 내용을 정리해 보세요!

# # 주피터 노트북 사용법
# 
# * `Shift + Enter` 키를 누르면 셀이 실행되고 커서가 다음셀로 이동합니다
# * `Enter` 키를 누르면 다시 편집상태로 돌아옵니다
# * `ESC` 키를 누르고
# * `a`키를 누르면 위에 셀이 추가됩니다
# * `b`키를 누르면 아래에 셀이 추가됩니다
# * `dd`키를 누르면 셀이 삭제됩니다
# * `m`키를 누르면 문서 셀로 변경됩니다
# * `y`키를 누르면 코드가 셀로 변경됩니다
# * `h` : 다양한 주피터 노트북의 단축키를 확인
# 
# ### `마크다운 (Markdown)`이란? 
# * 코드와 함께 문서화를 할 수 있는 문법입니다
# 

# # 데이터 분석을 위한 파이썬 속성 코스
# * `import`: 불러오기
# * `boolean`: True,False로 표시
# ```
# `==` : 비교연산 
# `=` : 할당연산
# `""` : 값을 문자로 만들기
# `!` : 숫자열이 문자로 적혀 있을 때
#    ex) True != "1" -> 1은 숫자이지만 "1"인해 문자로 인식, ! 이용
# `and` : 모든 조건이 True 일 때만 결과값이 True.
# `or` : 조건 중 하나만 Ture여도 결과값은 True.
# ```
# * 데이터 타입 출력 
# ```
# lower() : 데이터를 모두 소문자로 출력
# upper() : 데이터를 모두 대문자로 출력
# ```
# 
# * `list[]` : 원소 가져오기
# ex) 문자열_list[] - "찾고싶은 문자" in 문자열 
# 
# * `range(숫자)`: 특정 횟수만큼 반복문 실행
# 
# * `len()` : 문지열의 길이 
# * `split()` : 문자열 분리 
# * `join` : 분리된 문자열을 연결  ex) "".join() 
# * `enumerate()`: 인덱스 번호와 원소
# 

# # 파일경로 설정 방법
# 1. `%mv ~/Do` 입력 후 `Tab 키` 누르면 Downloads 파일경로 자동완성
# - `%mv` : 파일의 경로를 다른 곳으로 옮긴다는 의미
# - `%ls` :현재 폴더에 있는 파일 확인
# - `%pwd` : 주피터 노트북이 있는 폴더의 경로를 출력
# 
# 2. `pd.read_csv` 는 csv 파일로 파일을 읽어오는 것
# 
# * encoding 파라미터 설정으로 한글이 깨지지 않게 불러올 수 있음. (cp949, euc-kr, utf-8)
# * `.`은 현재 폴더의 경로를 말함

#   

# 📌Q4. 앞으로 우리는 공공데이터포털에서 데이터를 다운로드 받아 과정을 진행할 예정입니다. 본격적인 학습 이전에! 데이터를 다루는 방법이 익숙해지도록 한번 더 연습해보고, 어떤 문제를 풀 수 있을지도 함께 고민해보아요!
# 
# #### 공공데이터포털에서 원하는 데이터를 다운로드 받아 경로를 설정하고, 주피터 노트북과 판다스를 통해 불러와 보세요! 어떤 데이터를 사용해야할지 고민된다면 다음 링크의 데이터를 다운로드 받아도 좋습니다.

# In[ ]:


import pandas as pd
import numpy as np


# In[ ]:


from google.colab import drive
drive.mount('/content/drive')


# In[ ]:


garvage ='/content/drive/MyDrive/garvage.csv'
pd.read_csv(garvage, encoding='cp949')

